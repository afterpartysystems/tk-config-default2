# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.



#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    sg_asset_type:
        type: str
    Asset:
        type: str
    name:
        type: str
        filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric

    # Represents the optional output name for frames written by the After Effects Publish Rendering Plugin
    afx.comp:
        alias: comp
        type: str
        filter_by: alphanumeric
    afx.mov.ext:
        alias: extension
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)

    SEQ:
        type: sequence
        format_spec: "04"

    # Represents a frame sequence exported from Flame
    flame.frame:
        type: sequence
        format_spec: "08"

    eye:
        type: str

    houdini.node:
        alias: node
        type: str
    aov_name:
        type: str

    blender.scene:
        alias: scene
        type: str
    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str

    # These are used for the Mari UDIM pipeline:
    UDIM:
        type: sequence
        default: "<UDIM>"
    mari.channel:
        type: str
        alias: channel
    mari.layer:
        type: str
        alias: layer
    mari.project_name:
        type: str
        alias: name
    asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    task_name:
        type: str
        shotgun_entity_type: Task
        shotgun_field_name: content

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: ma
        alias: extension
    #needed for Multi publishing out of workfiles
    abcset_name:
      type: str
    ext:
      type: str
    ftype:
      type: str

#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    shot_root: 01_projects/{Shot}
    asset_root: 04_assets/{sg_asset_type}/{Asset}
    #sequence_root: sequences/{Sequence}


    ##########################################################################################
    # Project level paths
    ##########################################################################################

    # Publish root
    shot_publish_root: '@shot_root/publish'
    asset_publish_root: '@asset_root/publish'

    # Renders root
    shot_render_root: '@shot_root/renders'
    asset_render_root: '@asset_root/renders'

    #
    # Hiero
    #

    # The location of work area
    hiero_project_work_area:
        definition: '03_edit/02_projects/hiero'
    # The location of the published area
    hiero_project_publish_area:
        definition: '03_edit/06_publish/hiero'
    #
    # The location of WIP files
    hiero_project_work:
        definition: '@hiero_project_work_area/{name}_v{version}.hrox'
    # The location of backups of WIP files
    hiero_project_snapshot:
        definition: '@hiero_project_work_area/snapshots/{name}_v{version}_{timestamp}.hrox'
    # The location of published hiero files
    hiero_project_publish:
        definition: '@hiero_project_publish_area/{name}_v{version}.hrox'

    ##########################################################################################
    # Alembic cache paths
    ##########################################################################################

    # Shot level alembic caches
    shot_alembic_cache:
        definition: '@shot_publish_root/caches/@generic_shot_version_name.abc'
    shot_multi_cache:
        definition: '@shot_publish_root/caches/{Shot}_{task_name}-{name}-{abcset_name}_v{version}.{ext}'

    # Asset level alembic caches
    asset_alembic_cache:
        definition: '@asset_publish_root/caches/@generic_asset_version_name.abc'
    asset_multi_cache:
        definition: '@asset_publish_root/caches/{Asset}_{task_name}-{name}-{abcset_name}_v{version}.{ext}'

    ##########################################################################################
    # Shot level paths
    ##########################################################################################

    #
    # Photoshop Shot Level
    #

    # The location of the work area
    shot_work_area_photoshop:
        definition: '@shot_root/design/photoshop'
    # The location of published files
    shot_publish_area_photoshop:
        definition: '@shot_publish_root/photoshop'
    #
    # The location of WIP files
    photoshop_shot_work:
        definition: '@shot_work_area_photoshop/@generic_shot_version_name.psd'
    # The location of backups of WIP files
    photoshop_shot_snapshot:
        definition: '@shot_work_area_photoshop/snapshots/@generic_shot_version_name.{timestamp}.psd'
    # The location of the published images
    photoshop_shot_publish:
        definition: '@shot_publish_area_photoshop/@generic_shot_version_name.psd'
    photoshop_shot_png_publish:
        definition: '@shot_publish_area_photoshop/@generic_shot_version_name.png'
    photoshop_shot_jpg_publish:
        definition: '@shot_publish_area_photoshop/@generic_shot_version_name.jpg'

    #
    # After Effects Shot Level
    #

    # The location of the work area
    shot_work_area_aftereffects:
        definition: '@shot_root/comp/ae'
    # The location of published files
    shot_publish_area_aftereffects:
        definition: '@shot_publish_root/ae'
    #
    # The location of WIP files
    aftereffects_shot_work:
        definition: '@shot_work_area_aftereffects/@generic_shot_version_name.aep'
    # The location of backups of WIP files
    aftereffects_shot_snapshot:
        definition: '@shot_work_area_aftereffects/snapshots/@generic_shot_version_name.{timestamp}.aep'
    # The location of published files
    aftereffects_shot_publish:
        definition: '@shot_publish_area_aftereffects/@generic_shot_version_name.aep'
    aftereffects_shot_render_pub_mono:
        definition: '@shot_publish_area_aftereffects/elements/{task_name}/v{version}/{width}x{height}/{Shot}_{task_name}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_shot_render_movie:
        definition: '07_review/{Shot}_{task_name}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'


    #
    # Maya Shot Level
    #

    # The location of the work area
    shot_work_area_maya:
        definition: '@shot_root/3d/maya'
    # The location of published files
    shot_publish_area_maya:
        definition: '@shot_publish_root/maya'
    #
    # The location of WIP files
    maya_shot_work:
        definition: '@shot_work_area_maya/scenes/@generic_shot_version_name.{maya_extension}'
    # The location of backups of WIP files
    maya_shot_snapshot:
        definition: '@shot_work_area_maya/snapshots/@generic_shot_version_name.{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_shot_publish:
        definition: '@shot_publish_area_maya/@generic_shot_version_name.{maya_extension}'


    #
    # Houdini Shot Level
    #

    # The location of the work area
    shot_work_area_houdini:
        definition: '@shot_root/3d/houdini'
    # The location of published files
    shot_publish_area_houdini:
        definition: '@shot_publish_root/houdini'
    # The location of renders
    shot_render_area_houdini:
        definition: '@shot_render_root/houdini'
    #
    # The location of WIP files
    houdini_shot_work:
        definition: '@shot_work_area_houdini/scenes/@generic_shot_version_name.hip'
    # The location of backups of WIP files
    houdini_shot_snapshot:
        definition: '@shot_work_area_houdini/snapshots/@generic_shot_version_name.{timestamp}.hip'
    # The location of published houdini files
    houdini_shot_publish:
        definition: '@shot_publish_area_houdini/@generic_shot_version_name.hip'
    # Alembic caches
    houdini_shot_work_alembic_cache:
        definition: '@shot_work_area_houdini/cache/abc/{houdini.node}/{Shot}_{task_name}_{name}_{houdini.node}_v{version}.abc'
    # Rendered images
    houdini_shot_render:
        definition: '@shot_render_area_houdini/@generic_shot_version_name/{houdini.node}/v{version}/{Shot}_{task_name}-{name}_{houdini.node}_v{version}.{SEQ}.exr'
    # Additional mantra outputs
    houdini_shot_ifd:
        definition: '@shot_work_area_houdini/ifds/@generic_shot_version_name/{houdini.node}/v{version}/{Shot}_{task_name}-{name}_{houdini.node}_v{version}.{SEQ}.ifd'
    houdini_shot_dcm:
        definition: '@shot_work_area_houdini/dcms/@generic_shot_version_name/{houdini.node}/v{version}/{Shot}_{task_name}-{name}_{houdini.node}_v{version}.{SEQ}.dcm'
    houdini_shot_extra_plane:
        definition: '@shot_render_area_houdini/@generic_shot_version_name/{houdini.node}/v{version}/{aov_name}/{Shot}_{task_name}-{name}_{houdini.node}_{aov_name}_v{version}.{SEQ}.exr'


    #
    # Motionbuilder Shot Level
    #

    # define the location of a work area
    shot_work_area_mobu:
        definition: '@shot_root/3d/mobu'
    # define the location of a publish area
    shot_publish_area_mobu:
        definition: '@shot_publish_root/mobu'
    #
    # The location of WIP files
    mobu_shot_work:
        definition: '@shot_work_area_mobu/@generic_shot_version_name.fbx'
    # The location of backups of WIP files
    mobu_shot_snapshot:
        definition: '@shot_work_area_mobu/snapshots/@generic_shot_version_name.{timestamp}.fbx'
    # The location of published mobu files
    mobu_shot_publish:
        definition: '@shot_publish_area_mobu/@generic_shot_version_name.fbx'


    #
    # Nuke Shot Level
    #

    # define the location of a work area
    shot_work_area_nuke:
        definition: '@shot_root/comp/nuke'
    # define the location of a publish area
    shot_publish_area_nuke:
        definition: '@shot_publish_root/nuke'
    # The location of renders
    shot_render_area_nuke:
        definition: '@shot_render_root/nuke'
    # The location of footage
    shot_footage_area_nuke:
        definition: '@shot_root/footage'
    # The location of footage
    shot_element_area_nuke:
        definition: '@shot_root/elements'
    #
    # The location of WIP script files
    nuke_shot_work:
        definition: '@shot_work_area_nuke/@generic_shot_version_name.nk'
    # The location of backups of WIP files
    nuke_shot_snapshot:
        definition: '@shot_work_area_nuke/snapshots/@generic_shot_version_name.{timestamp}.nk'
    # The location of published nuke script files
    nuke_shot_publish:
        definition: '@shot_publish_area_nuke/@generic_shot_version_name.nk'

    # DPX write node output
    nuke_shot_render_dpx:
        definition: '@shot_render_area_nuke/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.dpx'
    nuke_shot_render_pub_dpx:
        definition: '@shot_publish_area_nuke/elements/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.dpx'
    # EXR write node output
    nuke_shot_render_exr:
        definition: '@shot_render_area_nuke/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.exr'
    nuke_shot_render_pub_exr:
        definition: '@shot_publish_area_nuke/elements/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.exr'
    # JPG write node output
    nuke_shot_render_jpg:
        definition: '@shot_render_area_nuke/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.jpg'
    nuke_shot_render_pub_jpg:
        definition: '@shot_publish_area_nuke/elements/{task_name}/@nuke_shot_output_name/{width}x{height}/@nuke_shot_output_name.{SEQ}.jpg'

    # review output
    shot_quicktime_quick:
        definition: '07_review/quickdaily/{Shot}_{name}_{iteration}.mov'
    nuke_shot_render_movie:
        definition: '07_review/{Shot}_{name}_{nuke.output}_v{version}.mov'

    #
    # Hiero Shot Level
    #

    # export of shot asset data from hiero (this is just setup so it won't break but is not used now)
    hiero_plate_path:
        definition: '01_projects/{Shot}/footage/{YYYY}_{MM}_{DD}/plates/{project}_{Shot}.mov'
    hiero_render_path:
        definition: '01_projects/{Shot}/footage/{YYYY}_{MM}_{DD}/renders/{project}_{Shot}.{SEQ}.dpx'

    #
    # Blender Shot Level
    #

    # define the location of a work area
    shot_work_area_blender:
        definition: '@shot_root/3d/blender'
    # define the location of a publish area
    shot_publish_area_blender:
        definition: '@shot_publish_root/blender'
    # The location of renders
    shot_render_area_blender:
        definition: '@shot_render_root/blender'
    #
    # The location of WIP session files
    blender_shot_work:
        definition: '@shot_work_area_blender/scenes/@generic_shot_version_name.blend'
    # The location of backups of WIP session files
    blender_shot_snapshot:
        definition: '@shot_work_area_blender/snapshots/@generic_shot_version_name.{timestamp}.blend'
    # The location of published session files
    blender_shot_publish:
        definition: '@shot_publish_area_blender/scenes/@generic_shot_version_name.blend'
    blender_shot_render:
        definition: '@shot_render_area_blender/@generic_shot_version_name/{blender.scene}/{Shot}_{task_name}-{name}-{blender.scene}_v{version}.{SEQ}'

    ##########################################################################################
    # Asset pipeline
    ##########################################################################################

    #
    # Photoshop Asset Level
    #

    # define the location of a work area
    asset_work_area_photoshop:
        definition: '@asset_root/design/photoshop'
    # define the location of a publish area
    asset_publish_area_photoshop:
        definition: '@asset_publish_root/photoshop'
    #
    # The location of WIP files
    photoshop_asset_work:
        definition: '@asset_work_area_photoshop/@generic_asset_version_name.psd'
    # The location of backups of WIP files
    photoshop_asset_snapshot:
        definition: '@asset_work_area_photoshop/snapshots/@generic_asset_version_name.{timestamp}.psd'
    photoshop_asset_publish:
        definition: '@asset_publish_area_photoshop/@generic_asset_version_name.psd'
    # The location of the published images
    photoshop_asset_png_publish:
        definition: '@asset_publish_area_photoshop/@generic_asset_version_name.png'
    photoshop_asset_jpg_publish:
        definition: '@asset_publish_area_photoshop/@generic_asset_version_name.jpg'

    #
    # After Effects Asset Level
    #

    # define the location of a work area
    asset_work_area_aftereffects:
        definition: '@asset_root/comp/ae'
    # define the location of a publish area
    asset_publish_area_aftereffects:
        definition: '@asset_publish_root/ae'
    #
    # The location of WIP files
    aftereffects_asset_work:
        definition: '@asset_work_area_aftereffects/@generic_asset_version_name.aep'
    # The location of backups of WIP files
    aftereffects_asset_snapshot:
        definition: '@asset_work_area_aftereffects/snapshots/@generic_asset_version_name.{timestamp}.aep'
    aftereffects_asset_publish:
        definition: '@asset_publish_area_aftereffects/@generic_asset_version_name.aep'
    aftereffects_asset_render_pub_mono:
        definition: '@asset_publish_area_aftereffects/elements/{task_name}/v{version}/{width}x{height}/{Asset}_{task_name}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_asset_render_movie:
        definition: '07_review/{Asset}_{task_name}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'

    #
    # Mari Asset Level
    #
    asset_mari_texture_tif:
        definition: '@asset_publish_root/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif'

    #
    # Maya Asset Level
    #

    # define the location of a work area
    asset_work_area_maya:
        definition: '@asset_root/3d/maya'
    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_publish_root/maya'
    #
    # The location of WIP files
    maya_asset_work:
        definition: '@asset_work_area_maya/scenes/@generic_asset_version_name.{maya_extension}'
    # The location of backups of WIP files
    maya_asset_snapshot:
        definition: '@asset_work_area_maya/snapshots/{@generic_asset_version_name.{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_asset_publish:
        definition: '@asset_publish_area_maya/@generic_asset_version_name.{maya_extension}'

    #
    # Houdini Asset Level
    #

    # define the location of a work area
    asset_work_area_houdini:
        definition: '@asset_root/3d/houdini'
    # define the location of a publish area
    asset_publish_area_houdini:
        definition: '@asset_publish_root/houdini'
    # The location of renders
    asset_render_area_houdini:
        definition: '@asset_render_root/houdini'
    #
    # The location of WIP files
    houdini_asset_work:
        definition: '@asset_work_area_houdini/scenes/@generic_asset_version_name.hip'
    # The location of backups of WIP files
    houdini_asset_snapshot:
        definition: '@asset_work_area_houdini/snapshots/@generic_asset_version_name.{timestamp}.hip'
    # The location of published houdini files
    houdini_asset_publish:
        definition: '@asset_publish_area_houdini/@generic_asset_version_name.hip'
    # Alembic caches
    houdini_asset_work_alembic_cache:
        definition: '@asset_work_area_houdini/cache/abc/{houdini.node}/{Asset}_{task_name}_{name}_{houdini.node}_v{version}.abc'
    # Rendered images
    houdini_asset_render:
        definition: '@asset_render_area_houdini/@generic_asset_version_name/{houdini.node}/v{version}/{Asset}_{task_name}_{name}_{houdini.node}_v{version}.{SEQ}.exr'
    # Additional mantra outputs
    houdini_asset_ifd:
        definition: '@asset_work_area_houdini/ifds/@generic_asset_version_name/{houdini.node}/v{version}/{Asset}_{task_name}_{name}_{houdini.node}_v{version}.{SEQ}.ifd'
    houdini_asset_dcm:
        definition: '@asset_work_area_houdini/dcms/@generic_asset_version_name/{houdini.node}/v{version}/{Asset}_{task_name}_{name}_{houdini.node}_v{version}.{SEQ}.dcm'
    houdini_asset_extra_plane:
        definition: '@asset_render_area_houdini/@generic_asset_version_name/{houdini.node}/v{version}/{aov_name}/{Asset}_{task_name}_{name}_{houdini.node}_{aov_name}_v{version}.{SEQ}.exr'

    #
    # Motionbuilder Asset Level
    #

    # define the location of a work area
    asset_work_area_mobu:
        definition: '@asset_root/3d/mobu'
    # define the location of a publish area
    asset_publish_area_mobu:
        definition: '@asset_publish_root/mobu'
    #
    # The location of WIP files
    mobu_asset_work:
        definition: '@asset_work_area_mobu/@generic_asset_version_name.fbx'
    # The location of backups of WIP files
    mobu_asset_snapshot:
        definition: '@asset_work_area_mobu/snapshots/@generic_asset_version_name.{timestamp}.fbx'
    # The location of published Motionbuilder files
    mobu_asset_publish:
        definition: '@asset_publish_area_mobu/@generic_asset_version_name.fbx'


    #
    # Nuke Asset Level
    #

    # define the location of a work area
    asset_work_area_nuke:
        definition: '@asset_root/comp/nuke'
    # define the location of a publish area
    asset_publish_area_nuke:
        definition: '@asset_publish_root/nuke'
    # The location of renders
    asset_render_area_nuke:
        definition: '@asset_render_root/nuke'
    # The location of footage
    asset_footage_area_nuke:
        definition: '@asset_root/footage'
    # The location of footage
    asset_element_area_nuke:
        definition: '@asset_root/elements'
    #
    # The location of WIP script files
    nuke_asset_work:
        definition: '@asset_work_area_nuke/@generic_asset_version_name.nk'
    # The location of backups of WIP files
    nuke_asset_snapshot:
        definition: '@asset_work_area_nuke/snapshots/@generic_asset_version_name.{timestamp}.nk'
    # The location of published nuke script files
    nuke_asset_publish:
        definition: '@asset_publish_area_nuke/@generic_asset_version_name.nk'

    # DPX write node output
    nuke_asset_render_dpx:
        definition: '@asset_render_area_nuke/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.dpx'
    nuke_asset_render_pub_dpx:
        definition: '@asset_publish_area_nuke/elements/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.dpx'
    # EXR write node output
    nuke_asset_render_exr:
        definition: '@asset_render_area_nuke/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.exr'
    nuke_asset_render_pub_exr:
        definition: '@asset_publish_area_nuke/elements/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.exr'
    # Jpg write node output
    nuke_asset_render_jpg:
        definition: '@asset_render_area_nuke/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.jpg'
    nuke_asset_render_pub_jpg:
        definition: '@asset_publish_area_nuke/elements/{task_name}/@nuke_asset_output_name/{width}x{height}/@nuke_asset_output_name.{SEQ}.jpg'

    # review output
    nuke_asset_render_movie:
        definition: '07_review/@nuke_asset_output_name.mov'
    asset_quicktime_quick:
        definition: '07_review/quickdaily/{Asset}_{task_name}_{nuke.output}_{iteration}.mov'

    #
    # Blender Asset Level
    #

    # Location of a work area
    asset_work_area_blender:
        definition: '@asset_root/3d/blender'
    # Location of a publish area
    asset_publish_area_blender:
        definition: '@asset_publish_root/blender'
    # Location of a render area
    asset_render_area_blender:
        definition: '@asset_render_root/blender'
    #
    # Location of WIP session files
    blender_asset_work:
        definition: '@asset_work_area_blender/scenes/@generic_asset_version_name.blend'
    # Location of backups of WIP session files
    blender_asset_snapshot:
        definition: '@asset_work_area_blender/snapshots/@generic_asset_version_name.{timestamp}.blend'
    # Location of the published session files
    blender_asset_publish:
        definition: '@asset_publish_area_blender/scenes/@generic_asset_version_name.blend'
    # Location of renders for assets
    blender_asset_render:
        definition: '@asset_render_area_blender/@generic_asset_version_name/{blender.scene}/{Asset}_{task_name}-{name}-{blender.scene}_v{version}.{SEQ}'
#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:

    # Generic filename for working files
    generic_shot_version_name: "{Shot}_{task_name}-{name}_v{version}"
    generic_asset_version_name: "{Asset}_{task_name}-{name}_v{version}"

    # Standard nuke output folder / filename
    nuke_shot_output_name: "{Shot}_{task_name}_{nuke.output}_v{version}"
    nuke_asset_output_name: "{Asset}_{task_name}_{nuke.output}_v{version}"

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

    # defines how the {tk_version} token in Hiero gets formatted back to tk.
    hiero_version: "{version}"

    # define how new Mari projects should be named
    mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"
